
# 新实例使用
# 更新 ca
yum update ca-certificates -y
# 安装 acme
curl  https://get.acme.sh | sh -s email=xxx@xxx.com

# 设置默认 CA, acme.sh 默认采用 zerossl
# acme.sh --set-default-ca --server zerossl
# 开启 acme.sh 自动升级
acme.sh  --upgrade  --auto-upgrade
# 开启通知
# webhook url
export SLACK_WEBHOOK_URL="xxxxxxxxx"
acme.sh --set-notify --notify-hook slack --notify-level 2


# 申请证书 
acme.sh --issue -d xxxx --webroot /data/public/

# zerossl 失败使用 letsencrypt
acme.sh --issue -d xxx.xxx.xxx --webroot /data/public/ --server letsencrypt

# 部署到证书到 ACM
acme.sh --deploy -d xxxx --deploy-hook aws_acm_tokyo
acme.sh --deploy -d xxxx --deploy-hook aws_acm_virginia
acme.sh --deploy -d xxxx --deploy-hook ssh

# 吊销证书
acme.sh --revoke -d xxx.xxx.xxx
# 强制重新申请证书
acme.sh --renew -d xxx.xxx.xxx --force


export DEPLOY_SSH_USER="root"
export DEPLOY_SSH_SERVER="xxx"<可选，不填默认提供域名的ip>
export DEPLOY_SSH_KEYFILE="/tmp/xxx.key"
export DEPLOY_SSH_CERTFILE="/tmp/xxx.cer"
export DEPLOY_SSH_CAFILE="/tmp/xxx.cer"
export DEPLOY_SSH_FULLCHAIN="/tmp/xxx.cer"
export DEPLOY_SSH_REMOTE_CMD="apachectl graceful"<复制任何证书后在远程服务器上执行的命令>

/etc/httpd/conf/httpd.conf 

# zerossl
ProxyPass /.well-known/acme-challenge/ http://xxxx.xxx.xxx/.well-known/acme-challenge/
ProxyPassReverse /.well-known/acme-challenge/ http://xxxx.xxx.xxx/.well-known/acme-challenge/


